<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cjcx.member.dao.TransactionGiftDao">

    <resultMap id="transactionGiftResultMap" type="TransactionGiftDto">
        <id property="id" column="id"/>
        <association property="user" column="user_id" javaType="com.cjcx.member.entity.User"
                     select="com.cjcx.member.dao.UserDao.findById">
        </association>
        <association property="gift" column="gift_id" javaType="com.cjcx.member.entity.Gift"
                     select="com.cjcx.member.dao.GiftDao.findById">
        </association>
    </resultMap>

    <sql id="BASE_COLUMN">
        id, phone, user_id, gift_id, score, number, update_time, update_by, create_time, create_by
    </sql>

    <insert id="insert" parameterType="Object">
        insert into t_transaction_gift (<include refid="BASE_COLUMN"/>)
        values (#{id},#{phone,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{giftId,jdbcType=INTEGER},
        #{score,jdbcType=DOUBLE}, #{number,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR})
    </insert>

    <select id="getTransactionGiftList" resultMap="transactionGiftResultMap" parameterType="FilterDto">
        /*select * from t_transaction_gift*/
        select
        t.id,
        t.score ,
        t.number,
        t.create_time createTime,
        t.update_time updateTime,
        u.nick_name nickName,
        u.open_id openId,
        u.phone,
        g.type giftType,
        g.code giftCode,
        g.name giftName
        from t_transaction_gift t, t_user u, t_gift g
        where t.user_id= u.id and t.gift_id = g.id
        <if test="userUniqueId != null">
            and u.phone = #{userUniqueId}
        </if>
        <if test="giftCode != null">
            and g.code like CONCAT('%', #{giftCode}, '%')
        </if>
        <if test="giftName != null">
            and g.name like CONCAT('%', #{giftName}, '%')
        </if>
        <if test="giftStartTime != null">
            and t.create_time &gt;= #{giftStartTime}
        </if>
        <if test="giftEndTime != null">
            and t.create_time &lt;= #{giftEndTime}
        </if>

        order by t.create_time desc
    </select>

    <select id="storageGiftExchange" parameterMap="storageScoreMap" statementType="CALLABLE">
        call SP_TRANSACTION_GIFT (?, ?, ?, ?)
    </select>
    <parameterMap type="java.util.Map" id="storageScoreMap">
        <parameter property="user_unique_id" mode="IN" jdbcType="VARCHAR"/>
        <parameter property="gift_id" mode="IN" jdbcType="VARCHAR"/>
        <parameter property="gift_number" mode="IN" jdbcType="DOUBLE"/>
        <parameter property="state" mode="OUT" jdbcType="VARCHAR"/>
    </parameterMap>

</mapper>